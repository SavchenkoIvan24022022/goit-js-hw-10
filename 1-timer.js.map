{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startBtn =  document.querySelector('[data-start]');\nconst inputDate = document.querySelector('#datetime-picker')\nlet intervalID = null;\nlet userSelectedDate = null;\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n\n    onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    const now = new Date();\nconsole.log(userSelectedDate);\nconsole.log(now);\n\n\n        if (userSelectedDate < now) {\n            iziToast.error({\n                title: 'Error',\n                message: 'Please choose a date in the future',\n                position: 'topRight',\n            });\n            startBtn.disabled = true; \n        } else {\n            startBtn.disabled = false; \n        }\n    },\n};\n\nflatpickr(\"#datetime-picker\", options);\n\n startBtn.disabled = true; \n\n startBtn.addEventListener('click', startTimer);\n\nfunction startTimer() {\n    const targetDate = userSelectedDate.getTime(); \n\n    clearInterval(intervalID); \n    inputDate.disabled = true;\n    startBtn.disabled = true; \n    intervalID = setInterval(() => {\n        const now = new Date().getTime();\n        const remainingTime = targetDate - now;\n\n        const days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));\n        const hours = Math.floor((remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n        const minutes = Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60));\n        const seconds = Math.floor((remainingTime % (1000 * 60)) / 1000);\n\n        document.querySelector('[data-days]').textContent = String(days).padStart(2, '0');\n        document.querySelector('[data-hours]').textContent = String(hours).padStart(2, '0'); \n        document.querySelector('[data-minutes]').textContent = String(minutes).padStart(2, '0'); \n        document.querySelector('[data-seconds]').textContent = String(seconds).padStart(2, '0'); \n\n        if (remainingTime < 1000) {\n            clearInterval (intervalID);\n            inputDate.disabled = false; \n        }\n    }, 1000);\n}\n"],"names":["startBtn","inputDate","intervalID","userSelectedDate","options","selectedDates","now","iziToast","flatpickr","startTimer","targetDate","remainingTime","days","hours","minutes","seconds"],"mappings":"2GAMA,MAAMA,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAY,SAAS,cAAc,kBAAkB,EAC3D,IAAIC,EAAa,KACbC,EAAmB,KACvB,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACvBF,EAAmBE,EAAc,CAAC,EAClC,MAAMC,EAAM,IAAI,KACpB,QAAQ,IAAIH,CAAgB,EAC5B,QAAQ,IAAIG,CAAG,EAGHH,EAAmBG,GACnBC,EAAS,MAAM,CACX,MAAO,QACP,QAAS,qCACT,SAAU,UAC1B,CAAa,EACDP,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAE3B,CACL,EAEAQ,EAAU,mBAAoBJ,CAAO,EAEpCJ,EAAS,SAAW,GAEpBA,EAAS,iBAAiB,QAASS,CAAU,EAE9C,SAASA,GAAa,CAClB,MAAMC,EAAaP,EAAiB,UAEpC,cAAcD,CAAU,EACxBD,EAAU,SAAW,GACrBD,EAAS,SAAW,GACpBE,EAAa,YAAY,IAAM,CAC3B,MAAMI,EAAM,IAAI,KAAM,EAAC,QAAO,EACxBK,EAAgBD,EAAaJ,EAE7BM,EAAO,KAAK,MAAMD,GAAiB,IAAO,GAAK,GAAK,GAAG,EACvDE,EAAQ,KAAK,MAAOF,GAAiB,IAAO,GAAK,GAAK,KAAQ,IAAO,GAAK,GAAG,EAC7EG,EAAU,KAAK,MAAOH,GAAiB,IAAO,GAAK,KAAQ,IAAO,GAAG,EACrEI,EAAU,KAAK,MAAOJ,GAAiB,IAAO,IAAO,GAAI,EAE/D,SAAS,cAAc,aAAa,EAAE,YAAc,OAAOC,CAAI,EAAE,SAAS,EAAG,GAAG,EAChF,SAAS,cAAc,cAAc,EAAE,YAAc,OAAOC,CAAK,EAAE,SAAS,EAAG,GAAG,EAClF,SAAS,cAAc,gBAAgB,EAAE,YAAc,OAAOC,CAAO,EAAE,SAAS,EAAG,GAAG,EACtF,SAAS,cAAc,gBAAgB,EAAE,YAAc,OAAOC,CAAO,EAAE,SAAS,EAAG,GAAG,EAElFJ,EAAgB,MAChB,cAAeT,CAAU,EACzBD,EAAU,SAAW,GAE5B,EAAE,GAAI,CACX"}